//
//  NetworkClient.swift
//  MovieQuiz
//
//

import Foundation

struct NetworkClient {

    private enum NetworkError: Error {
        case codeError
    }
 
    func fetch(url: URL, handler: @escaping (Result<Data, Error>) -> Void) {
        let request = URLRequest(url: url)
        print("üì° –û—Ç–ø—Ä–∞–≤–ª—è—é –∑–∞–ø—Ä–æ—Å: \(request.url?.absoluteString ?? "")")
        
        let task = URLSession.shared.dataTask(with: request) { data, response, error in
            if let error = error {
                print("‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏: \(error.localizedDescription)")
                handler(.failure(error))
                return
            }

            if let response = response as? HTTPURLResponse {
                print("üì¨ –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞: \(response.statusCode)")
                if response.statusCode < 200 || response.statusCode >= 300 {
                    handler(.failure(NetworkError.codeError))
                    return
                }
            }

            guard let data = data else {
                print("‚ö†Ô∏è –ü—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç")
                return
            }

            print("‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã: \(data.count) –±–∞–π—Ç")
            handler(.success(data))
        }

        task.resume()
    }
}
